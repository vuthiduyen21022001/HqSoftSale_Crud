@page "/orders"
@using HqSoftSale.Orders
@using Volo.Abp.Application.Dtos
@using Volo.Abp.AspNetCore.Components.Web
@using System.Net.Http.Json
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout
@using Volo.Abp.AspNetCore.Components.Web.Theming.PageToolbars
@using Volo.Abp.MultiTenancy
@using HqSoftSale.Localization
@using Microsoft.Extensions.Localization
@inject IOrderAppService OrderAppService
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@inject IStringLocalizer<HqSoftSaleResource> L
@inject AuthenticationStateProvider AuthenticationStateProvider
@inherits AbpCrudPageBase<IOrderAppService, OrderDto, Guid, PagedAndSortedResultRequestDto, CreateUpdateOrderDto>

@*<PageHeader BreadcrumbItems="BreadcrumbItems">
    <p></p>
</PageHeader>*@
<Row>
    <Column style="@($"display:{(_hideItem ? "none" : "block")}; max-width:15%")">
        <HqSoftSale.Blazor.Components.FilterBy />
    </Column>
    <Column style="@($"width:{(_hideItem ? "100%" : "75%")};")">
        <Card>
            <CardBody>
                <Row Style="padding-bottom:15px">
                    <Column ColumnSize="ColumnSize.Is2">
                        <Text TextWeight="TextWeight.Bold" Style="font-size: 20px">Sales Order</Text>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is2">
                    </Column>
                    <Column ColumnSize="ColumnSize.Is2">
                    </Column>
                    <Column ColumnSize="ColumnSize.Is2">
                    </Column>
                    <Column ColumnSize="ColumnSize.Is2">
                    </Column>
                    
@*                    <Column ColumnSize="ColumnSize.Is4" style="@($"padding-left:{(_hideItem ? "21rem" : "17rem")};padding-top: 23px;")">*@
                     <Column Style="padding:10px 10px 10px 120px">
                        <Button Outline Clicked="@((a)=>HideFilterBy())" Style="border-style: double;border-color: #e0e0e0;">
                            <Icon Name="IconName.List" />
                        </Button>
                        <Button Outline Style="border-style: double;border-color: #e0e0e0;">
                            <Icon Name="IconName.LocationArrow" />
                        </Button> 
                        <Button Color="Color.Secondary" Clicked="(()=>DeleteSelectedRows())">
                            <Icon Name="IconName.Delete" /> @L["Delete"]
                        </Button>
                        <Button Color="Color.Primary" Clicked="((e)=>GoToCreatePage())">
                            <Icon Name="IconName.Add" /> @L["New"]
                        </Button>
                   
                        </Column>
                 </Row>

                      
                   
                @*Content*@

                <DataGrid TItem="OrderDto"
                          Data="@ordersList"
                          CustomFilter="@OnCustomFilter"
                          SortMode="DataGridSortMode.Single"
                          SelectionMode="DataGridSelectionMode.Multiple"
                          Striped
                          Sortable
                          ShowPager
                          Responsive
                          SelectedRows="@selectedRows">
                    <DataGridColumns>
                        <DataGridMultiSelectColumn TItem="OrderDto" Width="30px">
                            <DisplayTemplate>
                                <input type="checkbox" @bind="context.IsSelected" />
                            </DisplayTemplate>
                        </DataGridMultiSelectColumn>
                        <DataGridCommandColumn />
                         <DataGridColumn Field="@nameof(OrderDto.OrderNumber)" Caption="@L["Order Number"]" Context="order">
                            <DisplayTemplate>
                                <Link Underline="Underline.Always" Clicked="@(() => GoToEditPage(order))">@order.OrderNumber</Link>
                            </DisplayTemplate>
                        </DataGridColumn>
                     
                        <DataGridColumn Field="@nameof(OrderDto.OrderStatus)" Caption="@L["Order Status"]">
                            <DisplayTemplate>
                                @if (context.OrderStatus == OrderStatus.Open)
                                {
                                    <Badge Style="color: #F5BE4E; background-color: #FFF9EF">@context.OrderStatus</Badge>
                                }
                                else if (context.OrderStatus == OrderStatus.Complete)
                                {
                                    <Badge Style="color: #5FB0E7; background-color: #D8E9F5">@context.OrderStatus</Badge>
                                }
                                else if (context.OrderStatus == OrderStatus.Cancel)
                                {
                                    <Badge Style="color: #918F83; background-color: #EDEDEF">@context.OrderStatus</Badge>
                                }
                               
                                else
                                {
                                    <Badge Style="color: #D7888E; background-color: #F9EDF0">@context.OrderStatus</Badge>
                                }
                            </DisplayTemplate>
                      </DataGridColumn>
                        <DataGridColumn Field="@nameof(OrderDto.OrderDate)" Caption="@L["Order Date"]">
                            <DisplayTemplate>
                                @context.OrderDate.ToString("dd/MM/yyyy")
                            </DisplayTemplate>
                        </DataGridColumn>
                       
                        <DataGridColumn Field="@nameof(OrderDto.Customer)" Caption="@L["Customer "]" />
                      
                    </DataGridColumns>
                    <PageButtonTemplate>
                        <Span TextColor="TextColor.Success">
                            @context.PageNumber
                        </Span>
                    </PageButtonTemplate>
                    <PageSizesTemplate>
                        <Select TextColor="TextColor.Success" @bind-SelectedValue="@context.CurrentPageSize" Size="Size.Small">
                            @foreach (var curPageSize in context.PageSizes)
                            {
                                <SelectItem Value="@curPageSize">@curPageSize</SelectItem>
                            }
                        </Select>
                    </PageSizesTemplate>
                </DataGrid>
            </CardBody>
        </Card>
    </Column>
</Row>